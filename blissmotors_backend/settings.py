"""
Django settings for blissmotors_backend project.

Generated by 'django-admin startproject' using Django 2.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
import datetime

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'xa73o8t)_9kyj9by*c_ne(etf)1cd=(2rdp!t^c5b2bt6rev3f'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

if DEBUG:
    ALLOWED_HOSTS = ['blissmotors-dev-env.bgfm5ydhpm.us-west-2.elasticbeanstalk.com',
                    'blissbackend.com',
                    '127.0.0.1']
else:
    ALLOWED_HOSTS = ['blissmotors-env.srhhrduarm.us-west-2.elasticbeanstalk.com',
                     '127.0.0.1',
                    'bmhax.com']


# Application definition

INSTALLED_APPS = [
    # 'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.sites',
    'django.contrib.staticfiles',

    # Third party apps
    # REST framework
    'rest_framework',
    'rest_framework.authtoken',
    'django_filters',

    # REST Auth
    'allauth',
    'allauth.account',
    'rest_auth',
    'rest_auth.registration',
    'oauth2_provider',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.facebook',
    'allauth.socialaccount.providers.twitter',

    # REST API
    'api',
    'users',
    'leads',
    'careers',
    'deals',
    'cars',
    'payment',
    'chat',
    
    # Cors
    'corsheaders',
    'coreapi'
]

# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
EMAIL_USE_TLS = True
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = 'customercare@blissmotors.com'
EMAIL_HOST_PASSWORD = 'Blissmotors2018'
EMAIL_PORT = 587

SITE_ID = 1

# AUTH_USER_MODEL = 'users.CustomUser'

REST_AUTH_SERIALIZERS = {
    'USER_DETAILS_SERIALIZER': 'users.serializers.UserSerializer',
}

REST_AUTH_REGISTER_SERIALIZERS = {
    'REGISTER_SERIALIZER': 'users.serializers.UserRegisterSerializer'
}

REST_USE_JWT = True

JWT_AUTH = {
    'JWT_EXPIRATION_DELTA': datetime.timedelta(days=7)
}

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.BasicAuthentication',
        # 'rest_framework.authentication.TokenAuthentication',  # <-- And here
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10
}

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'blissmotors_backend.urls'

TEMPLATES_ROOT = os.path.join(BASE_DIR, "templates")

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATES_ROOT],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'blissmotors_backend.wsgi.application'

if DEBUG:
    CORS_ORIGIN_WHITELIST = (
        'google.com',
        'localhost:8080',
        'd1fi63pqo9rywn.cloudfront.net',
        'blissmotors-website-frontend.s3-website.us-east-2.amazonaws.com',
        '4d4442c8.ngrok.io'
    )

else:
    CORS_ORIGIN_WHITELIST = (
        'google.com',
        'd1fi63pqo9rywn.cloudfront.net',
        'blisslease.com',
        'blissmotors.com',
        'www.blisslease.com',
        'www.blissmotors.com',
        'blissmotors-website-frontend.s3-website.us-east-2.amazonaws.com',
        'blissmotors-website-frontend-dev.s3-website.us-east-2.amazonaws.com',
        'd1dqaw0r13p9np.cloudfront.net',
        'd3o4yca91ao1dy.cloudfront.net',
        'blissmotors-website-mobile-dev.s3-website.us-east-2.amazonaws.com',
        'd3o4yca91ao1dy.cloudfront.net'
    )


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'bmcars_dev', # os.environ.get('DB_NAME', '')
        'USER': 'hzhou',
        'PASSWORD': 'cognitiveati',
        'HOST': 'blissmotors.cqh3eh5shl0r.us-east-2.rds.amazonaws.com',
        'PORT': '5432',
    }
}

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': 'mydatabase',
#     }
# }


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

from django.urls import reverse_lazy

ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_EMAIL_VERIFICATION = 'mandatory'
# ACCOUNT_AUTHENTICATION_METHOD = "email"
ACCOUNT_CONFIRM_EMAIL_ON_GET = True
ACCOUNT_EMAIL_CONFIRMATION_ANONYMOUS_REDIRECT_URL = reverse_lazy('rest_user_details')
ACCOUNT_EMAIL_CONFIRMATION_AUTHENTICATED_REDIRECT_URL = reverse_lazy('rest_user_details')

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'


# stripe_key = os.environ['STRIPE_KEY']
# project_id = os.environ['DIALOGFLOW_ID']

stripe_key = 'sk_test_fjCFAT1FOUrlcs3oX8RjqPIr00HaTg36Ww'
project_id = 'newagent-c47af'

